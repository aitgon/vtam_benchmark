import shlex
import subprocess

rule all_analyse_dalu_mfzr:
    input:
        os.path.join(outdir, "dalu_fish/filters_mfzr/asv_table_final.tsv"),


rule dalu_mfzr_add_filters:
    input:
        os.path.join(outdir, "dalu_fish/filters_mfzr/asv_table_pooled_replicates.tsv"),
        os.path.join(outdir, "vtam_fish/all_asv_vtam_fish.tsv"),
        "metafiles/sample_types_fish.tsv",
        "metafiles/mock_composition_fish_mfzr.tsv",
    output:
        os.path.join(outdir, "dalu_fish/filters_mfzr/asv_table_final.tsv"),
    params:
        min_readcount=min_readcount,
    shell:
        """perl scripts/add_filters.pl -asv {input[0]} -out_asv {output[0]} -id_col 0 -first_sample_col 3 -motif_after_last_sample sequence -seq_col '-1' -all_seqs_vtam {input[1]} -sample_types {input[2]} -mock_compositon {input[3]} -match_seqid_to_vtam 1 -filter_indel 1 -filter_codon_stop 1 -min_readcount {params.min_readcount}"""

rule replicate_pooling_mfzr:
    input:
        os.path.join(outdir, "dalu_fish/dada_mfzr/asv.fasta"),
        os.path.join(outdir, "dalu_fish/dada_mfzr/asv_table_lulu.csv"),
        "metafiles/sample_types_fish.tsv",
    output:
        os.path.join(outdir, "dalu_fish/filters_mfzr/asv_table_pooled_replicates.tsv"),
    shell:
        """perl scripts/pool_replicates.pl -asvseq {input[0]} -asvtable {input[1]} -out {output[0]} -septable ',' -samples {input[2]} -marker MFZR"""

rule lulu_mfzr:
    input:
        os.path.join(outdir, "dalu_fish/dada_mfzr/asv_table_names.csv"),
        os.path.join(outdir, "dalu_fish/dada_mfzr/asv_auto_blast.tsv"),
    output:
        os.path.join(outdir, "dalu_fish/dada_mfzr/asv_table_lulu.csv"),
    shell:
        """Rscript scripts/lulu.R {input[0]} {input[1]} {output[0]}"""

rule blastn_fish_mfzr:
    input:
        os.path.join(outdir, "dalu_fish/dada_mfzr/asv.fasta"),
        os.path.join(outdir, "dalu_fish/dada_mfzr/asv.fasta.nsq"),
    output:
        os.path.join(outdir, "dalu_fish/dada_mfzr/asv_auto_blast.tsv"),
    run:
        cmd="blastn -db " + input[0] + " -outfmt '6 qseqid sseqid pident' -out " + output[0] + " -qcov_hsp_perc 80 -perc_identity 80 -query " + input[0]
        print(cmd)
        subprocess.Popen(shlex.split(cmd)).communicate()

rule makeblastdb_fish_mfzr:
    input:
        os.path.join(outdir, "dalu_fish/dada_mfzr/asv.fasta"),
    output:
        os.path.join(outdir, "dalu_fish/dada_mfzr/asv.fasta.nsq"),
    run:
        cmd="makeblastdb -in " + input[0] + " -parse_seqids -dbtype nucl -out " + (output[0])[:-4]
        print(cmd)
        subprocess.Popen(shlex.split(cmd)).communicate()


rule dada_mfzr:
    input:
        os.path.join(outdir, "dalu_fish/fastq_mfzr/MFZR-Tpos2_prerun-3_rv.fastq.gz"),
    output:
        os.path.join(outdir, "dalu_fish/dada_mfzr/track.csv"),
        os.path.join(outdir, "dalu_fish/dada_mfzr/asv.fasta"),
        os.path.join(outdir, "dalu_fish/dada_mfzr/asv_table_names.csv"),
    params:
        truncLen0=170,
        seq_length_range0=175,
        seq_length_range1=190,
        dataset="fish",
    shell:
        """Rscript scripts/dada.R $(dirname {input[0]}) {output[0]} {output[1]} {output[2]} {params.truncLen0} {params.seq_length_range0} {params.seq_length_range1} {params.dataset}"""

