public_data_dir = config['public_data_dir']
process_data_dir = config['process_data_dir']

bat_zip_lst = ['64342', '64342', '64341', '64340', '64339']
bat_fastq_lst = ['JSTR00932-0201ter_S1368_L001_R2_001.fastq.gz', 'JSTR00932-0201ter_S1368_L001_R2_001.fastq.gz', 'T-Fter_S859_L001_R2_001.fastq.gz', 'DPEF00808fcter_S1407_L001_R2_001.fastq.gz', 'DPEF00391fcter_S892_L001_R2_001.fastq.gz']
bat_dic = dict(zip(bat_fastq_lst, bat_zip_lst))

rule all_dwnld_bat:
    input:
        expand(os.path.join(outdir, "data_bat/{bat_fastq}"), bat_fastq=bat_fastq_lst),

rule unzip_bat:
    input:
        lambda w: os.path.join(public_data_dir, "datadryad.org/stash/downloads/file_stream", bat_dic[w.bat_fastq]),
    output:
        os.path.join(outdir, "data_bat/{bat_fastq}"),
    shell:
        "unzip -o -j {input[0]} -d  $(dirname {output[0]})"

rule wget_bat:
    output:
        os.path.join(public_data_dir, "datadryad.org/stash/downloads/file_stream/{bat_zip}"),
    params:
        url="datadryad.org/stash/downloads/file_stream/{bat_zip}",
        public_data_dir_path=public_data_dir,
    wildcard_constraints:
        bat_zip="643\d\d"
    shell:
        "wget -c -q -r {params.url} -P {params.public_data_dir_path}"
