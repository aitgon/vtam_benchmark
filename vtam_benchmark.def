Bootstrap: docker
From: ubuntu:20.04

IncludeCmd: yes

%help
# Build takes around 60m
# Size 2G
# home is /root
# software goes to /opt

Usage:
$ singularity run mycontainer.sif [args]
$ singularity run --app R mycontainer.sif R [args]
$ singularity run --app R mycontainer.sif Rscript [args]
$ singularity run --app miniconda mycontainer.sif python [args]
R packages go to '/usr/local/lib/R/site-library'

%labels
MAINTAINER Aitor Gonz√°lez
EMAIL aitor.gonzalez@univ-amu.fr

%environment
export LC_ALL=C

%post
export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true
sed -i 's|http://archive.ubuntu.com/ubuntu/|http://ftp.rezopole.net/ubuntu/|g' /etc/apt/sources.list
sed -i 's|http://security.ubuntu.com/ubuntu/|http://ftp.rezopole.net/ubuntu/|g' /etc/apt/sources.list
apt update
apt update --fix-missing
apt -y upgrade
apt install -y aptitude

apt install -y build-essential
apt install -y cmake
apt install -y fort77
apt install -y g++
apt install -y gcc
apt install -y gcc-multilib
apt install -y gfortran
apt install -y git
apt install -y gobjc++
apt install -y libblas-dev
apt install -y libbz2-dev
apt install -y libcurl4-openssl-dev
apt install -y libfreetype6-dev
apt install -y libfribidi-dev
apt install -y libgsl-dev
apt install -y libharfbuzz-dev
apt install -y libjpeg-dev
apt install -y liblzma-dev
apt install -y libpcre2-dev
apt install -y libpcre3
apt install -y libpcre3-dev
apt install -y libpng-dev
apt install -y libreadline-dev
apt install -y libssl-dev
apt install -y libtiff5-dev
apt install -y libxml2-dev
apt install -y libz-dev
apt install -y openjdk-8-jdk
apt install -y r-cran-jpeg
apt install -y wget
apt install -y xorg-dev
apt install -y zlib1g-dev

###############################################################################
#
# R
#
###############################################################################

%environment
export PATH=/opt/R/bin:"${PATH}"
export R_LIBS=/opt/R/lib/R/library

%post
export R_LIBS=/opt/R/lib/R/library # R packages folder
cd # change to /root
VERSION=4.1.2
MAJOR=4
wget https://cran.r-project.org/src/base/R-${MAJOR}/R-${VERSION}.tar.gz
tar zxvf R-${VERSION}.tar.gz
rm -rf R-${VERSION}.tar.gz
cd R-${VERSION}/
mkdir -p "${R_LIBS}"
./configure --prefix=/opt/R/ --enable-R-shlib --with-pcre1
make
make install
cd # change to /root
rm -rf R-${VERSION}

# Executables in this folder will be called with:
# singularity run --app myapprun out/mycontainer.sif myexecutable [args]
%apprun R
exec /opt/R/bin/"${@}"

###############################################################################
#
# miniconda
#
###############################################################################

%environment
export PATH=/opt/miniconda/envs/myenv/bin:"${PATH}"

%post
cd # change to /root
CONDAINSTALLER=Miniconda3-py39_4.10.3-Linux-x86_64.sh
wget https://repo.anaconda.com/miniconda/${CONDAINSTALLER}
chmod +x ${CONDAINSTALLER}
./${CONDAINSTALLER} -b -p /opt/miniconda
/opt/miniconda/bin/conda create -y -n myenv python=3.10
chmod --recursive a+rw /opt/miniconda
cd # change to /root
rm ${CONDAINSTALLER}

# Executables in this folder will be called with:
# singularity run --app myapprun out/mycontainer.sif myexecutable [args]
%apprun miniconda
exec /opt/miniconda/envs/myenv/bin/"${@}"

###############################################################################
#
# miniconda packages
#
###############################################################################

%post
/opt/miniconda/envs/myenv/bin/pip install cutadapt
/opt/miniconda/envs/myenv/bin/pip install snakemake
/opt/miniconda/envs/myenv/bin/pip install vtam==0.2.0
/opt/miniconda/envs/myenv/bin/pip install cython
/opt/miniconda/envs/myenv/bin/pip install obitools3
/opt/miniconda/bin/conda install -n myenv -c bioconda blast
/opt/miniconda/bin/conda install -n myenv -c bioconda vsearch

###############################################################################
#
# R: deps
#
###############################################################################

%post
/opt/R/bin/Rscript -e 'install.packages(c("pkgdown"), repos = "https://cran.biotools.fr/")'
/opt/R/bin/Rscript -e 'install.packages(c("devtools"), repos = "https://cran.biotools.fr/")'
/opt/R/bin/Rscript -e 'install.packages(c("dplyr"), repos = "https://cran.biotools.fr/")'
/opt/R/bin/Rscript -e 'install.packages(c("vegan"), repos = "https://cran.biotools.fr/")'
/opt/R/bin/Rscript -e 'install.packages(c("ggplot2"), repos = "https://cran.biotools.fr/")'
/opt/R/bin/Rscript -e 'install.packages(c("ggpubr"), repos = "https://cran.biotools.fr/")'
/opt/R/bin/Rscript -e 'install.packages(c("readxl"), repos = "https://cran.biotools.fr/")'

/opt/R/bin/Rscript -e 'install.packages("jpeg", repos = "https://cran.biotools.fr/")'
/opt/R/bin/Rscript -e 'install.packages("ragg", repos = "https://cran.biotools.fr/")'
/opt/R/bin/Rscript -e 'install.packages("pkgdown", repos = "https://cran.biotools.fr/")'
/opt/R/bin/Rscript -e 'install.packages("latticeExtra", repos = "https://cran.biotools.fr/")'
/opt/R/bin/Rscript -e 'install.packages("BiocManager", repos = "https://cran.biotools.fr/")'

/opt/R/bin/Rscript -e 'BiocManager::install("ShortRead")'
/opt/R/bin/Rscript -e 'BiocManager::install("dada2")'
/opt/R/bin/Rscript -e 'BiocManager::install("biomformat")'

/opt/R/bin/Rscript -e 'devtools::install_github("metabaRfactory/metabaR")'

wget https://github.com/tobiasgf/lulu/archive/refs/heads/master.zip -O lulu.zip
unzip lulu.zip
mv lulu-master lulu
/opt/R/bin/Rscript -e 'devtools::install("lulu")'
rm -rf lulu

###############################################################################
#
# Clean ubuntu packages
#
###############################################################################

apt clean
rm -rf /var/lib/apt/lists/*

